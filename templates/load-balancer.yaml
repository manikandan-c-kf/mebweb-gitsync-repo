AWSTemplateFormatVersion: "2010-09-09"
Description: Load Balancer and Target Group Configuration

Parameters:
  Environment:
    Type: String
    AllowedValues: [dev, test, prod]
    Default: dev

Resources:
  LoadBalancerSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Security group for the Load Balancer
      VpcId: !ImportValue VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  LoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub "meb-${AWS::Region}-alb-${Environment}"
      Scheme: internet-facing
      Type: application
      SecurityGroups:
        - !Ref LoadBalancerSecurityGroup
      Subnets:
        - !Select [0, !Split [",", !ImportValue PublicSubnetIds]]
        - !Select [1, !Split [",", !ImportValue PublicSubnetIds]]
      LoadBalancerAttributes:
        - Key: "access_logs.s3.enabled"
          Value: "true"
        - Key: "access_logs.s3.bucket"
          Value: !ImportValue AccessLogsBucketName
        - Key: "access_logs.s3.prefix"
          Value: "alb-logs"
        - Key: "deletion_protection.enabled"
          Value: "false"
        - Key: "idle_timeout.timeout_seconds"
          Value: "60"

  SSLCertificate:
    Type: AWS::CertificateManager::Certificate
    Properties:
      DomainName: www.example.com # !GetAtt LoadBalancer.DNSName
      ValidationMethod: DNS

  TargetGroupHTTP:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub "meb-${AWS::Region}-tg-http-${Environment}"
      Port: 80
      Protocol: HTTP
      ProtocolVersion: HTTP1
      VpcId: !ImportValue VpcId
      TargetType: ip
      HealthCheckPath: "/health"
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      TargetGroupAttributes:
        - Key: "deregistration_delay.timeout_seconds"
          Value: "30"

  TargetGroupHTTPS:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub "meb-${AWS::Region}-tg-https-${Environment}"
      Port: 443
      Protocol: HTTPS
      ProtocolVersion: HTTP1
      VpcId: !ImportValue VpcId
      TargetType: ip
      HealthCheckPath: "/health"
      HealthCheckEnabled: true
      HealthCheckIntervalSeconds: 30
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 3
      TargetGroupAttributes:
        - Key: "deregistration_delay.timeout_seconds"
          Value: "30"

  ListenerHTTP:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: redirect
          RedirectConfig:
            Protocol: HTTPS
            Port: "443"
            StatusCode: HTTP_301
      LoadBalancerArn: !Ref LoadBalancer
      Port: 80
      Protocol: HTTP

  ListenerHTTPS:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroupHTTPS
      LoadBalancerArn: !Ref LoadBalancer
      Port: 443
      Protocol: HTTPS
      Certificates:
        - CertificateArn: !Ref SSLCertificate

Outputs:
  LoadBalancerDNSName:
    Description: DNS name of the load balancer
    Value: !GetAtt LoadBalancer.DNSName
    Export:
      Name: LoadBalancerDNSName

  LoadBalancerArn:
    Description: ARN of the load balancer
    Value: !GetAtt LoadBalancer.LoadBalancerArn
    Export:
      Name: LoadBalancerArn

  TargetGroupHTTPArn:
    Description: ARN of the HTTP target group
    Value: !Ref TargetGroupHTTP
    Export:
      Name: TargetGroupHTTPArn

  TargetGroupHTTPSArn:
    Description: ARN of the HTTPS target group
    Value: !Ref TargetGroupHTTPS
    Export:
      Name: TargetGroupHTTPSArn

  LoadBalancerSecurityGroupId:
    Description: Security Group ID for Load Balancer
    Value: !Ref LoadBalancerSecurityGroup
    Export:
      Name: LoadBalancerSecurityGroupId