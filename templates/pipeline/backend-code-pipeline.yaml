AWSTemplateFormatVersion: "2010-09-09"
Description: Code pipeline Stack for front end and back end.

Parameters:
  Environment:
    Type: String
  BackendGitHubRepositoryName:
    Type: String
    Description: GitHub repository name for back end
  BackendGitHubBranchName:
    Type: String
    Description: GitHub branch name for back end
  CodeStarConnectionArn:
    Type: String
    Description: CodeStarConnectionArn
  ECRRepositoryName:
    Type: String
  BackendCodeBucket:
    Type: String
    Description: S3 bucket name for back end code  
  CodePipelineName:
    Type: String
    Description: Name of the CodePipeline

Resources:
  BackendCodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codebuild.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BackendBuildPermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Resource: "*"
                Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:PutLogEvents
                  - ecr:GetAuthorizationToken
              - Resource: !Join ['', ['arn:aws:s3:::', !ImportValue BackendArtifactBucketName, '/*']]
                Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:PutObject
                  - s3:GetObjectVersion
              - Resource:
                  - !Sub "arn:aws:ecr:${AWS::Region}:${AWS::AccountId}:repository/${ECRRepositoryName}-${Environment}"
                Effect: Allow
                Action:
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                  - ecr:BatchCheckLayerAvailability
                  - ecr:PutImage
                  - ecr:InitiateLayerUpload
                  - ecr:UploadLayerPart
                  - ecr:CompleteLayerUpload
                  - ecr:GetAuthorizationToken
                  - ecr:ListImages
                  - ecr:DescribeRepositories
              - Resource:
                  - !Sub "arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:read-env-mebweb-${Environment}"
                Effect: Allow
                Action:
                  - lambda:InvokeFunction

  BackendCodePipelineServiceRole:
    Type: AWS::IAM::Role
    Properties:
      Path: /
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service: codepipeline.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: BackendPipelinePermissions
          PolicyDocument:
            Version: 2012-10-17
            Statement:
              - Effect: Allow
                Action:
                  - s3:PutObject
                  - s3:GetObject
                  - s3:GetObjectVersion
                  - s3:GetBucketVersioning
                  - s3:ListBucket
                Resource: !Join ['', ['arn:aws:s3:::', !ImportValue BackendArtifactBucketName, '/*']]
              - Effect: Allow
                Action:
                  - ecs:DescribeServices
                  - ecs:DescribeTaskDefinition
                  - ecs:DescribeTasks
                  - ecs:ListTasks
                  - ecs:RegisterTaskDefinition
                  - ecs:UpdateService
                  - codebuild:StartBuild
                  - codebuild:BatchGetBuilds
                Resource: "*"
              - Effect: Allow
                Action:
                  - iam:PassRole
                Resource: "*"
              - Effect: Allow
                Action:
                  - codestar-connections:UseConnection
                Resource: !Sub "${CodeStarConnectionArn}"
              - Effect: Allow
                Action:
                  - s3:GetObject
                  - s3:GetBucketLocation
                  - s3:PutObject
                  - s3:ListBucket
                  - s3:GetBucketVersioning
                  - s3:GetObjectVersion
                Resource:
                  - !Sub arn:aws:s3:::${BackendCodeBucket}
                  - !Sub arn:aws:s3:::${BackendCodeBucket}/*

  EventBridgeInvokePipelineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: events.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: StartCodePipeline
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codepipeline:StartPipelineExecution
                Resource: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipelineName}"

  BackendCodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: "buildspec.yaml"
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: "aws/codebuild/amazonlinux2-x86_64-standard:4.0"
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_DEFAULT_REGION
            Value: !Ref AWS::Region
          - Name: REPOSITORY_URI
            Value: !Sub ${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/${BackendGitHubRepositoryName}
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWS::AccountId
          - Name: IMAGE_REPO_NAME
            Value: !Sub "${ECRRepositoryName}-${Environment}"
          - Name: ECS_CONTAINER_NAME
            Value: !ImportValue ECSContainerName
      Name: !Ref AWS::StackName
      ServiceRole: !Ref BackendCodeBuildServiceRole

  BackendPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name: "Backend-Code-Pipeline"
      RoleArn: !GetAtt BackendCodePipelineServiceRole.Arn
      ArtifactStore:
        Type: S3
        Location: !ImportValue BackendArtifactBucketName
      Stages:
        - Name: Source
          Actions:
            - Name: S3Source
              ActionTypeId:
                Category: "Source"
                Owner: "AWS"
                Provider: "S3"
                Version: "1"
              OutputArtifacts:
                - Name: SourceArtifact
              Configuration:
                S3Bucket: !Ref BackendCodeBucket
                S3ObjectKey: "azure_code.zip"
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: Build
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              Configuration:
                ProjectName: !Ref BackendCodeBuildProject
              InputArtifacts:
                - Name: SourceArtifact
              OutputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1
        - Name: Deploy
          Actions:
            - Name: Deploy
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Version: 1
                Provider: ECS
              Configuration:
                ClusterName: !ImportValue ECSCluster
                ServiceName: !ImportValue ECSService
                FileName: imagedefinitions.json
              InputArtifacts:
                - Name: BuildArtifact
              RunOrder: 1

  S3TriggerEventRule:
    Type: AWS::Events::Rule
    Properties:
      Name: !Sub "S3Trigger-${CodePipelineName}"
      Description: "Trigger CodePipeline when a new object is uploaded to S3"
      EventPattern:
        source:
          - "aws.s3"
        detail-type:
          - "Object Created"
        detail:
          bucket:
            name:
              - !Ref BackendCodeBucket
      Targets:
        - Arn: !Sub "arn:aws:codepipeline:${AWS::Region}:${AWS::AccountId}:${CodePipelineName}"
          Id: "CodePipelineTrigger"
          RoleArn: !GetAtt EventBridgeInvokePipelineRole.Arn