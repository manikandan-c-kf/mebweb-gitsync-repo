AWSTemplateFormatVersion: "2010-09-09"
Description: ECS Cluster, Service, and Task Definition Configuration

Parameters:
  Environment:
    Type: String
    Description: The environment for which the resources are being created (e.g., dev, prod, staging)
  ECSContainerName:
    Type: String
    Description: Name of the ECS container

Resources:
  TaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy
      Policies:
        - PolicyName: ECRAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - ecr:GetAuthorizationToken
                  - ecr:BatchCheckLayerAvailability
                  - ecr:GetDownloadUrlForLayer
                  - ecr:BatchGetImage
                Resource: "*"

  ECSCluster:
    Type: AWS::ECS::Cluster
    Properties:
      ClusterName: !Sub "mebweb-cluster-${Environment}"

  ECSTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Family: !Sub "mebweb-taskdefinition-${Environment}"
      NetworkMode: awsvpc
      RequiresCompatibilities: ["FARGATE"]
      Cpu: '256'
      Memory: '512'
      ExecutionRoleArn: !GetAtt TaskExecutionRole.Arn
      TaskRoleArn: !GetAtt TaskExecutionRole.Arn
      ContainerDefinitions:
        - Name: !Sub "${ECSContainerName}-${Environment}"
          Image: !ImportValue ECRRepositoryURI:latest
          PortMappings:
            - ContainerPort: 80
              Protocol: tcp
          Essential: true
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Sub "/ecs/${AWS::StackName}"
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: ecs

  ECSService:
    Type: AWS::ECS::Service
    DependsOn: ECSCluster
    Properties:
      ServiceName: !Sub "${AWS::StackName}-service-${Environment}"
      Cluster: !Ref ECSCluster
      DesiredCount: 0
      LaunchType: FARGATE
      TaskDefinition: !Ref ECSTaskDefinition
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: ENABLED
          Subnets:
            - !Select [0, !Split [",", !ImportValue PrivateSubnetIds]]
            - !Select [1, !Split [",", !ImportValue PrivateSubnetIds]]
          SecurityGroups:
            - !ImportValue SecurityGroupId

  LogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/ecs/${AWS::StackName}"
      RetentionInDays: 30

Outputs:
  ECSClusterName:
    Description: Name of the ECS cluster
    Value: !Ref ECSCluster
    Export:
      Name: !Sub "${AWS::StackName}-ECSClusterName"
  ECSServiceName:
    Description: Name of the ECS Service
    Value: !Ref ECSService
    Export:
      Name: !Sub "${AWS::StackName}-ECSService"
